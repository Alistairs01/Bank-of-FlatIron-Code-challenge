{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alistairs/Development/CodeAssignments/Phase-2/code-challenges/Phase-2-code-challenge/Challenge-1-Bank-of-Flatiron-021023/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm({\n  onAddTransaction\n}) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleFormSubmit(evt) {\n    evt.preventDefault();\n    const transactionData = {\n      date: formData.date,\n      description: formData.description,\n      category: formData.category,\n      amount: formData.amount\n    }; //POST request to add the transaction\n\n    const fetchPOSTOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(transactionData)\n    };\n    fetch(`http://localhost:6001/transactions`, fetchPOSTOptions).then(res => res.json()).then(newTransaction => onAddTransaction(newTransaction)); // RESET form after POST operation\n\n    setFormData({\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: 0\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"date\",\n          children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            \"aria-labelledby\": \"date\",\n            value: formData.date,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: formData.description,\n          placeholder: \"Description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          value: formData.category,\n          placeholder: \"Category\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: formData.amount,\n          placeholder: \"Amount\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        style: {\n          color: \"green\"\n        },\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"U+TQTZOVffKqrJ7Qfsm0LJtE7+Y=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/alistairs/Development/CodeAssignments/Phase-2/code-challenges/Phase-2-code-challenge/Challenge-1-Bank-of-Flatiron-021023/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","onAddTransaction","formData","setFormData","date","description","category","amount","handleChange","evt","name","target","value","handleFormSubmit","preventDefault","transactionData","fetchPOSTOptions","method","headers","body","JSON","stringify","fetch","then","res","json","newTransaction","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTransactionForm({ onAddTransaction }) {\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  });\n\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(evt) {\n    evt.preventDefault();\n    const transactionData = {\n      date: formData.date,\n      description: formData.description,\n      category: formData.category,\n      amount: formData.amount,\n    };\n\n    //POST request to add the transaction\n    const fetchPOSTOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(transactionData),\n    };\n    fetch(`http://localhost:6001/transactions`, fetchPOSTOptions)\n      .then((res) => res.json())\n      .then((newTransaction) => onAddTransaction(newTransaction));\n\n    // RESET form after POST operation\n    setFormData({\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: 0,\n    });\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleFormSubmit}>\n        <div className=\"inline fields\">\n          <label id=\"date\">\n            Date:\n            <input\n              type=\"date\"\n              name=\"date\"\n              aria-labelledby=\"date\"\n              value={formData.date}\n              onChange={handleChange}\n            />\n          </label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={formData.description}\n            placeholder=\"Description\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            value={formData.category}\n            placeholder=\"Category\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            value={formData.amount}\n            placeholder=\"Amount\"\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\" style={{ color: \"green\" }}>\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}